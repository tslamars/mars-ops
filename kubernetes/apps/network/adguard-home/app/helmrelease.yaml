# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/app-template-3.7.2/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: adguard-home
  namespace: network
spec:
  chart:
    spec:
      chart: app-template
      version: 3.7.2
      reconcileStrategy: ChartVersion
      sourceRef:
        kind: HelmRepository
        namespace: flux-system
        name: bjw-s
  interval: 1h
  driftDetection:
    mode: enabled
  values:
    controllers:
      adguard-home:
        type: statefulset
        replicas: 2
        annotations:
          configmap.reloader.stakater.com/reload: unbound
        initContainers:
          set-permissions:
            image:
              repository: busybox
              tag: "1.36"
              pullPolicy: IfNotPresent
            command:
              - sh
              - -c
              - chmod 700 /opt/adguardhome/work
            securityContext:
              runAsUser: 0  # Run as root to ensure permission changes can be made
              runAsGroup: 0
              allowPrivilegeEscalation: true
        containers:
          app:
            image:
              repository: adguard/adguardhome
              tag: v0.107.57@sha256:5c536c1e25f76693ae7ee5e64e8a029893e0f3f1778c8d2a9581383e60cfa9b9
              pullPolicy: IfNotPresent
            env:
              TZ: America/New_York
            probes:
              liveness: &probe
                enabled: true
                type: HTTP
                port: 3000
                path: /login.html
              readiness: *probe
              startup:
                <<: *probe
                spec:
                  failureThreshold: 30
                  periodSeconds: 5
            securityContext:
              readOnlyRootFilesystem: true  # Reverted to secure setting
              runAsUser: 65534  # Reverted to non-root user (nobody)
              runAsGroup: 65534  # Reverted to non-root group
              allowPrivilegeEscalation: false  # Reverted to secure setting
              capabilities:
                add: ["NET_BIND_SERVICE"]  # Added to allow binding to port 53 as non-root
          unbound:
            image:
              repository: ghcr.io/gabe565/unbound-cache
              tag: beta
              pullPolicy: Always
            env:
              TZ: America/New_York
            probes:
              liveness: &probe
                enabled: true
                type: TCP
                port: 5353
              readiness: *probe
              startup:
                <<: *probe
                spec:
                  failureThreshold: 30
                  periodSeconds: 5
            securityContext:
              readOnlyRootFilesystem: true
              allowPrivilegeEscalation: false
        pod:
          priorityClassName: system-cluster-critical
          securityContext:
            fsGroup: 65534  # Reverted to match the non-root user
            fsGroupChangePolicy: OnRootMismatch
            runAsNonRoot: true  # Reverted to enforce non-root
          affinity:
            podAntiAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
                - weight: 1
                  podAffinityTerm:
                    topologyKey: kubernetes.io/hostname
                    labelSelector:
                      matchLabels:
                        app.kubernetes.io/name: adguard-home
                        app.kubernetes.io/component: adguard-home
        statefulset:
          volumeClaimTemplates:
            - name: data
              storageClass: longhorn
              accessMode: ReadWriteOnce
              size: 2Gi
              advancedMounts:
                app:
                  - path: /opt/adguardhome/conf
                    subPath: conf
                  - path: /opt/adguardhome/work
                    subPath: work
                unbound:
                  - path: /opt/unbound/data
                    subPath: unbound
        extraVolumeMounts:
          - name: data
            mountPath: /opt/adguardhome/work
            subPath: work
      sync:
        containers:
          app:
            image:
              repository: ghcr.io/bakito/adguardhome-sync
              tag: alpine-v0.7.1@sha256:4409e1301375647bf177934c8441d79566d2c2557f0e0fa06a28fc6daeea65d4
              pullPolicy: IfNotPresent
            args: [run]
            env:
              - name: ORIGIN_URL
                value: http://adguard-home-origin:3000
              - name: ORIGIN_WEB_URL
                value: https://adguard-home.${SECRET_DOMAIN}
              - name: ORIGIN_USERNAME
                valueFrom:
                  secretKeyRef:
                    name: &secret adguard-home-secret
                    key: SYNC_USERNAME
              - name: ORIGIN_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: &secret adguard-home-secret
                    key: SYNC_PASSWORD
              - name: REPLICA_URL
                value: http://adguard-home-replica:3000
              - name: REPLICA_WEB_URL
                value: https://replica.${SECRET_DOMAIN}
              - name: REPLICA_USERNAME
                valueFrom:
                  secretKeyRef:
                    name: &secret adguard-home-secret
                    key: SYNC_USERNAME
              - name: REPLICA_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: &secret adguard-home-secret
                    key: SYNC_PASSWORD
              - name: REPLICA_AUTO_SETUP
                value: "true"
              - name: CRON
                value: "*/10 * * * *"
            securityContext:
              readOnlyRootFilesystem: true
              allowPrivilegeEscalation: false
              capabilities: {drop: [ALL]}
        pod:
          securityContext:
            runAsNonRoot: true

    service:
      adguard-home:
        controller: adguard-home
        ports:
          http:
            port: 3000
      sync:
        controller: sync
        ports:
          http:
            port: 8080
      origin: &origin-http
        controller: adguard-home
        extraSelectorLabels:
          apps.kubernetes.io/pod-index: "0"
        ports:
          http:
            port: 3000
      origin-dns: &origin-dns
        controller: adguard-home
        extraSelectorLabels:
          apps.kubernetes.io/pod-index: "0"
        type: LoadBalancer
        externalTrafficPolicy: Local
        loadBalancerIP: 10.10.5.252
        ports:
          dns-tcp:
            port: 53
            protocol: TCP
          dns-udp:
            port: 53
            protocol: UDP

      replica:
        <<: *origin-http
        extraSelectorLabels:
          apps.kubernetes.io/pod-index: "1"
      replica-dns:
        <<: *origin-dns
        extraSelectorLabels:
          apps.kubernetes.io/pod-index: "1"
        type: LoadBalancer
        externalTrafficPolicy: Local
        loadBalancerIP: 10.10.5.253
        ports:
          dns-tcp:
            port: 53
            protocol: TCP
          dns-udp:
            port: 53
            protocol: UDP

    persistence:
      unbound:
        enabled: true
        type: configMap
        name: unbound
        advancedMounts:
          adguard-home:
            unbound:
              - path: /opt/unbound/etc/unbound/unbound.conf
                subPath: unbound.conf
      tmp:
        enabled: true
        type: emptyDir
        advancedMounts:
          adguard-home:
            unbound:
              - path: /opt/unbound/etc/unbound/dev
                subPath: dev
              - path: /opt/unbound/etc/unbound/var
                subPath: var

    ingress:
      app: &ingress
        className: internal
        annotations:
          external-dns.alpha.kubernetes.io/target: "internal.${SECRET_DOMAIN}"
        hosts:
          - host: "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: adguard-home
                  port: http
      replica:
        <<: *ingress
        hosts:
          - host: replica.${SECRET_DOMAIN}
            paths:
              - path: /
                service:
                  identifier: replica
                  port: http